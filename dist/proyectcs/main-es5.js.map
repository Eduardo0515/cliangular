{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/services/web-sockets.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","wsService","title","selector","templateUrl","styleUrls","config","url","wsUrl","options","AppModule","forRoot","declarations","imports","providers","bootstrap","DashboardComponent","LoginComponent","WebSocketsService","socket","socketStatus","checkStatus","on","providedIn","environment","production","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport {WebSocketsService} from '../app/services/web-sockets.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'proyectcs';\n  constructor (public wsService: WebSocketsService){}\n}\n","<footer class=\"p-2 bg-dark text-white text-right\">\r\n    Server status:\r\n    <span *ngIf=\"wsService.socketStatus\" class=\"text-success\">\r\n      Online\r\n    </span>\r\n  \r\n    <span *ngIf=\"!wsService.socketStatus\" class=\"text-danger\">\r\n      Offline\r\n    </span>\r\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n//import { EjemploComponent } from './ejemplo/ejemplo.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport {SocketIoModule, SocketIoConfig} from 'ngx-socket-io';\nimport {environment} from 'src/environments/environment';\n\nconst config: SocketIoConfig = {\n  url: environment.wsUrl, options:{}\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    //EjemploComponent,\n    LoginComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    SocketIoModule.forRoot(config)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login works!</p>\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebSocketsService {\n  public socketStatus = false;\n\n  constructor(private socket: Socket) {\n    this.checkStatus();\n  }\n\n  checkStatus() {\n    this.socket.on('connect', () => {\n      this.socketStatus = true;\n    })\n\n    this.socket.on('disconnect', () => {\n      this.socketStatus = false;\n    })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  wsUrl: 'http://18.206.124.233:3001'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}